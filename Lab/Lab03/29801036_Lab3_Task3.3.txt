3.3)

The sequence of the child and the parent process is not consistent.

sometimes the duplicated child process runs before the parent process sometimes parents runs before child.

This is caused by context switching of the process, as the cpu will switch between 
parent and child process concurrently.



What has happend to the pattern of executions of the two processes?

After changhing the delay loop to limit of 1,000,000 --> 100,000
- No notable difference can be observed, only slightly more inconsistency occur,
such that more than 1 parent process are now more prone to run  before the first
child process.

After changhing the delay loop to limit of 100,000 --> 10,000
- Several parent process will run before the execution of first child process.

After changhing the delay loop to limit of 10,000 --> 1,000
- most of the time, parent process will run completely before the first child process run,
however, sometimes child process will run in between the parent process.

After changhing the delay loop to limit of 1,000 --> 100
- Parent process almost always run completely before the first child process run.


After changhing the delay loop to limit of 1,000,000 --> 10,000,000
- No notable difference can be observed, only slightly more inconsistency occur,
such that sometimes child process will now run before the parent process.

After changhing the delay loop to limit of 10,000,000 --> 100,000,000
- First child process always run before the parent process
- Some lag can be observed from the terminal while printing the message.
	- Not instantaneous.
	

Can you find a value for the limit so that one process can print out four values 
at a time without losing control (but no more than 4 values)?
-- 15,000 - not consistent but sometimes achievable.



After adding in the sleep function.
- The value are printed sequentially in a 2 by 2 orders. With a slight pause.
- Controlling the printing of processes is less precise however it is more intuitive.










